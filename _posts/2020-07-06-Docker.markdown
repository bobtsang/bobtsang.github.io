---
layout: post
title:  "Docker"
date:   2020-07-06 23:51:07 +0800
---
### Why Docker

- Streamline development workflows
  - CI/CD
- Micorservices
- Reproducible Data Science

### Terminology

![docker flow](https://jfrog--c.eu12.content.force.com/servlet/servlet.ImageServer?id=0151r000006uDeS&oid=00D20000000M3v0&lastMod=1584629589000)

- `Dockerfile` <br>
    static files which contains instructions to create a Docker image, by using `docker build` command
- `Image` <br>
  - <b> immutable</b> file that contains source code, libraries, dependencies.
  - image layers
- `Container`<br>
    runnable instance of an image

### Use Data in Docker

> By default all files inside a container are stored on a writable container layer.

- If the container no longer exists, data will be gone
- The data can be easily move to somewhere else in the host machine

> Docker has two options for containers to store files in the host machine, so that the files are persisted even after the container stops: volumes and bind mounts

- `Volumes` are stored in a part of the host filesystem which is managed by Docker

### Reference

[1] Docker in Action, Jeffrey Nickoloff, 2019 <br>
[2] [Docker documentation](https://docs.docker.com/) <br>
[3] [Docker curriculum](https://github.com/prakhar1989/docker-curriculum) <br>
[4] [Moby Project - a collaborative project for the container ecosystem to assemble container-based systems](https://github.com/moby/moby/blob/master/image/spec/v1.md) <br>
[5] [What's difference between COPY and ADD in Dockerfile](https://stackoverflow.com/questions/24958140/what-is-the-difference-between-the-copy-and-add-commands-in-a-dockerfile) <br>
[6] [Best practices for writing Dockerfiles](https://docs.docker.com/develop/develop-images/dockerfile_best-practices/) <br>
[7] [Data Science Workflows using Docker Containers](https://www.youtube.com/watch?time_continue=32&v=oO8n3y23b6M&feature=emb_logo) <br>
